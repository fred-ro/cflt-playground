# Intellij HTTP Client request file

### get cluster_id
GET http://localhost:8082/v3/clusters

> {% client.global.set('cluster_id', response.body.data[0].cluster_id); %}

### create test topic
POST http://localhost:8082/v3/clusters/{{cluster_id}}/topics
Content-Type: application/json

{
  "topic_name": "jsonTopic",
  "partitions_count": 3,
  "replication_factor": 1
}

### Register a JSON schema to the schema-registry
POST http://localhost:8081/subjects/jsonTopic-value/versions
Content-Type: application/vnd.schemaregistry.v1+json
Accept: application/json

{
  "schemaType": "JSON",
  "schema":
  "{ \"$schema\": \"https://json-schema.org/draft/2020-12/schema\", \"$id\": \"https://example.com/test.schema.json\", \"title\": \"Test\",\"description\": \"A test\",\"type\": \"object\",\"properties\": {\"intField\": { \"description\": \"An integer field\", \"type\": \"integer\"  }, \"stringField\": {  \"description\": \"A string field\",  \"type\": \"string\"}, \"optionalField\": {  \"description\": \"An optional field\",  \"type\": \"string\"}},\"required\": [ \"intField\", \"stringField\" ]}"
}

> {%
  const schemaId = response.body.id;
  client.log(`schema_id is ${schemaId}`);
  client.global.set('schema_id',schemaId);
%}

### request using schema_id
POST http://localhost:8082/v3/clusters/{{cluster_id}}/topics/jsonTopic/records
Content-Type: application/json

{
  "key": {
    "type": "BINARY",
    "data": "VGhpcyBpcyBteSBrZXk="
  },
  "value": {
    "schema_id": {{schema_id}},
    "data": { "intField": 2, "stringField": "A String"}
  }
}

### #2 request using schema_id
POST http://localhost:8082/v3/clusters/{{cluster_id}}/topics/jsonTopic/records
Content-Type: application/json

{
  "key": {
    "type": "BINARY",
    "data": "VGhpcyBpcyBteSBrZXk="
  },
  "value": {
    "schema_id": {{schema_id}},
    "data": { "intField": 3, "stringField": "Another String", "optionalField":  "A string"}
  }
}